{"ast":null,"code":"var _jsxFileName = \"/Users/ayseguleren/Desktop/github/ContactApp/src/components/Contacts/List/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction List({\n  contacts\n}) {\n  _s();\n\n  const [filter, setFilter] = useState(\"\");\n  const filteredText = contacts.filter(item => {\n    //neden keys aliniyor values alinmiyor????????????????????????\n    return Object.keys(item).some(key => {\n      //if delete curly braces, return is not need\n      return item[key].toString().toLowerCase().includes(filter.toLowerCase());\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Filter\",\n      value: filter,\n      onChange: e => setFilter(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list\",\n      children: filteredText.map((contact, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: contact.fullname\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total: \", filter.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n\n_s(List, \"VelxxRsu3xMVZ7KohiXLjPsa6Qc=\");\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/Users/ayseguleren/Desktop/github/ContactApp/src/components/Contacts/List/index.js"],"names":["useState","List","contacts","filter","setFilter","filteredText","item","Object","keys","some","key","toString","toLowerCase","includes","e","target","value","map","contact","index","fullname","length"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;;;AAEA,SAASC,IAAT,CAAc;AAACC,EAAAA;AAAD,CAAd,EAA0B;AAAA;;AACtB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAMK,YAAY,GAAGH,QAAQ,CAACC,MAAT,CAAiBG,IAAD,IAAU;AAC3C;AACA,WAAOC,MAAM,CAACC,IAAP,CAAYF,IAAZ,EAAkBG,IAAlB,CAAwBC,GAAD,IAAS;AACnC;AACA,aAAOJ,IAAI,CAACI,GAAD,CAAJ,CAAUC,QAAV,GAAqBC,WAArB,GACFC,QADE,CACOV,MAAM,CAACS,WAAP,EADP,CAAP;AAEH,KAJM,CAAP;AAKH,GAPoB,CAArB;AASA,sBACI;AAAA,4BACI;AACI,MAAA,WAAW,EAAC,QADhB;AAEI,MAAA,KAAK,EAAET,MAFX;AAGI,MAAA,QAAQ,EAAGW,CAAD,IAAOV,SAAS,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV;AAH9B;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA,gBAEQX,YAAY,CAACY,GAAb,CAAiB,CAACC,OAAD,EAAUC,KAAV,kBACb;AAAA,kBAAiBD,OAAO,CAACE;AAAzB,SAASD,KAAT;AAAA;AAAA;AAAA;AAAA,cADJ;AAFR;AAAA;AAAA;AAAA;AAAA,YALJ,eAaI;AAAA,4BAAWhB,MAAM,CAACkB,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GA7BQpB,I;;KAAAA,I;AA+BT,eAAeA,IAAf","sourcesContent":["import {useState} from 'react'\n\nfunction List({contacts}) {\n    const [filter, setFilter] = useState(\"\");\n\n    const filteredText = contacts.filter((item) => {\n        //neden keys aliniyor values alinmiyor????????????????????????\n        return Object.keys(item).some((key) => {\n            //if delete curly braces, return is not need\n            return item[key].toString().toLowerCase()\n                .includes(filter.toLowerCase());\n        });\n    });\n\n    return (\n        <div>\n            <input \n                placeholder=\"Filter\"\n                value={filter}\n                onChange={(e) => setFilter(e.target.value)}/>\n            <ul className=\"list\">\n                {\n                    filteredText.map((contact, index) => (\n                        <li key={index}>{contact.fullname}</li>\n                    ))\n                }\n            </ul>\n\n            <p>Total: {filter.length}</p>\n        </div>\n    )\n}\n\nexport default List\n"]},"metadata":{},"sourceType":"module"}